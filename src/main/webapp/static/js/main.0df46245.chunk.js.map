{"version":3,"sources":["preview-image.png","services/CourseService.js","components/CourseRowComponent.js","components/CourseTableComponent.js","components/CourseCardComponent.js","components/CourseGridComponent.js","containers/CourseManagerContainer.js","components/ModuleListComponent.js","services/ModuleService.js","containers/ModuleListContainer.js","components/LessonTabsComponent.js","services/LessonService.js","containers/LessonTabsContainer.js","components/TopicPillsComponent.js","services/TopicService.js","containers/TopicPillsContainer.js","containers/CourseEditorContainer.js","components/HomeComponent.js","components/LoginComponent.js","components/RegistrationComponent.js","components/ProfileComponent.js","components/WhiteBoard.js","App.js","serviceWorker.js","reducers/moduleReducer.js","reducers/lessonReducer.js","reducers/topicReducer.js","index.js"],"names":["module","exports","course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseRowComponent","state","editing","unsaved_changes","props","setEditing","setState","ok","courseService","_id","status","updateCourseTitle","newTitle","prevState","title","prevProps","snapshot","selected","this","className","onClick","selectCourse","to","onChange","event","target","value","owner","modified","deleteCourse","React","Component","CourseTableComponent","align","setLayout","courses","map","key","src","require","alt","CourseGridComponent","CourseManagerContainer","layout","match","params","newCourseTitle","history","push","courseToDelete","filter","addCourse","Date","toDateString","theActualNewCourse","actualArrayOfCourses","type","placeholder","ModuleListComponent","newModuleTitle","editingModule","moduleId","findModuleForCourse","modules","onclick","e","deleteModule","updateModule","createModule","newModule","ModuleListContainer","connect","ownProps","moduleReducer","dispatch","ModuleService","modulesForTheCourse","newModuleData","updatedModule","actualNewModule","LessonTabsComponent","newLessonTitle","editingLesson","lessonId","findLessonsForModule","lessons","lesson","deleteLesson","updateLesson","createLesson","newLesson","LessonTabsContainer","lessonReducer","LessonService","lessonsForTheModule","newLessonData","updatedLesson","actualNewLesson","TopicPillsComponent","newTopicTitle","editingTopic","findTopicsForLesson","topics","topic","deleteTopic","updateTopic","createTopic","topicId","newTopic","TopicPillsContainer","topicReducer","TopicService","topicsForTheLesson","newTopicData","updatedTopic","actualNewTopic","CourseEditorContainer","courseName","HomeComponent","LoginComponent","htmlFor","id","role","RegistrationComponent","ProfileComponent","readOnly","disabled","selectedvalue","WhiteBoard","path","exact","component","App","Boolean","window","location","hostname","initialState","action","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0df46245.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preview-image.b43f4e05.png\";","const createCourse = (course) =>\n  fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/courses\", {\n    method: 'POST',\n    body: JSON.stringify(course),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\nconst updateCourse = (courseId, course) =>\n  fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/courses/\" + courseId, {\n    method: 'PUT',\n    body: JSON.stringify(course),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\nconst deleteCourse = (courseId) =>\n  fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/courses/\" + courseId, {\n    method: 'DELETE'\n  })\n    .then(response => response.json())\n\nconst findCourseById = (courseId) =>\n    fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/courses/\" + courseId)\n        .then(response => response.json())\n\nconst findAllCourses = () =>\n  fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/courses\")\n    .then(response => response.json())\n\nexport default {\n  createCourse,\n  deleteCourse,\n  findCourseById,\n  findAllCourses,\n  updateCourse\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from '../services/CourseService'\n\nexport default class CourseRowComponent extends React.Component {\n  state = {\n    editing: false,\n    unsaved_changes: this.props.course,\n    course: this.props.course\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n      if(prevProps.selected && !this.props.selected) {\n          this.setState({\n              editing: false,\n              unsaved_changes: this.state.course\n          })\n      }\n  }\n\n  setEditing = (editing) =>\n    this.setState({editing: editing})\n\n  ok = () => {\n      this.setState({\n          course: this.state.unsaved_changes\n      })\n      courseService.updateCourse(\n          this.state.unsaved_changes._id,\n          this.state.unsaved_changes)\n          .then(status => this.setEditing(false))\n  }\n\n  updateCourseTitle = (newTitle) =>\n    this.setState(prevState => ({\n        unsaved_changes: {\n        ...prevState.unsaved_changes,\n        title: newTitle\n      }\n    }))\n\n  render() {\n    return(\n        <tr className={this.props.selected ? 'table-primary' : ''}\n            onClick={() => this.props.selectCourse(this.state.course._id)}>\n            <td className=\"wbdv-large-cell align-middle\">\n                <div className=\"form-group row\">\n                    <div className=\"col-1 wbdv-doc-icon\">\n                        <span className={this.props.selected ? 'wbdv-selected-white' : ''}>\n                            <i className=\"fa fa-file-text wbdv-row wbdv-icon align-middle\"></i>\n                        </span>\n                    </div>\n                    {\n                        !this.state.editing &&\n                        <div className=\"col-11 text-truncate wbdv-title-text\">\n                                <Link to={`/editor/${this.state.course._id}`}\n                                      className={this.props.selected ?\n                                                 'wbdv-selected-white' :\n                                                 'wbdv-sharp-blue'}>\n                                    <span className={`wbdv-manager-link ${this.props.selected ? 'wbdv-selected-white' : ''}`}>\n                                        {this.state.course.title}\n                                    </span>\n                                </Link>\n                        </div>\n                    }\n                    {\n                        this.state.editing && this.props.selected &&\n                        <div className=\"col-11\">\n                            <input\n                                className=\"form-control align-middle\"\n                                onChange={(event) => this.updateCourseTitle(event.target.value)}\n                                value={this.state.unsaved_changes.title}/>\n                        </div>\n                    }\n                </div>\n            </td>\n            <td className=\"d-none d-md-table-cell wbdv-small-cell align-middle wbdv-row-light-text wbdv-row wbdv-owner\">\n                <span className={this.props.selected ? 'wbdv-selected-white' : ''}>\n                    {this.state.course.owner}\n                </span>\n            </td>\n            <td className=\"d-none d-md-table-cell wbdv-small-cell align-middle wbdv-row-light-text wbdv-row wbdv-modified-date\">\n                <span className={this.props.selected ? 'wbdv-selected-white' : ''}>\n                    {this.state.course.modified}\n                </span>\n            </td>\n            <td className=\"wbdv-small-cell align-middle wbdv-selected-white\">\n                {\n                    !this.state.editing && this.props.selected &&\n                    <div className=\"float-right\">\n                        <i className=\"fa fa-pencil fa-lg wbdv-row-button-spacing\"\n                           onClick={() => this.setEditing(true)}/>\n                        <i className=\"fa fa-trash fa-lg wbdv-row-button-spacing\"\n                            onClick={() => this.props.deleteCourse(this.props.course)}/>\n                    </div>\n                }\n                {\n                    this.state.editing &&\n                    <i className=\"fa fa-check fa-lg wbdv-row-button-spacing float-right\"\n                        onClick={this.ok}/>\n                }\n            </td>\n        </tr>\n\n    )\n  }\n}\n","import React from \"react\";\nimport CourseRowComponent from \"./CourseRowComponent\";\n\nexport default class CourseTableComponent\n  extends React.Component\n{\n  render() {\n    return(\n      <div>\n        <table className=\"table\">\n          <thead>\n          <tr>\n            <th className=\"d-table-cell wbdv-large-cell wbdv-header-height align-middle wbdv-dark-gray wbdv-header wbdv-title\">\n              Title\n              <i className=\"fa fa-caret-up wbdv-drop-down-arrow\"></i>\n            </th>\n            <th className=\"d-none d-md-table-cell wbdv-small-cell wbdv-header-height align-middle wbdv-dark-gray wbdv-header wbdv-owner\">\n              Owned by\n              <i className=\"fa fa-caret-down wbdv-drop-down-arrow\"></i>\n            </th>\n            <th className=\"d-none d-md-table-cell wbdv-small-cell wbdv-header-height align-middle wbdv-last-modified-size wbdv-dark-gray wbdv-header wbdv-last-modified\">\n              Last modified by me\n            </th>\n            <th className=\"wbdv-small-cell wbdv-header-height align-middle wbdv-dark-gray\"\n                align=\"center\">\n              <div>\n                  <i className=\"fa fa-th wbdv-row-button-spacing\"\n                      onClick={() =>\n                          this.props.setLayout('grid')}/>\n                <a className=\"wbdv-header wbdv-sort\">\n                  <i className=\"fa fa-sort-alpha-asc wbdv-row-button-spacing\"></i>\n                </a>\n              </div>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {\n            this.props.courses.map(course =>\n              <CourseRowComponent\n                deleteCourse={this.props.deleteCourse}\n                selectCourse={this.props.selectCourse}\n                key={course._id}\n                course={course}\n                selected={this.props.selected === course._id}/>\n          )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport courseService from '../services/CourseService'\n\nexport default class CourseRowComponent extends React.Component {\n    state = {\n        editing: false,\n        unsaved_changes: this.props.course,\n        course: this.props.course\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.selected && !this.props.selected) {\n            this.setState({\n                editing: false,\n                unsaved_changes: this.state.course\n            })\n        }\n    }\n\n    setEditing = (editing) =>\n        this.setState({editing: editing})\n\n    ok = () => {\n        this.setState({\n            course: this.state.unsaved_changes\n        })\n        courseService.updateCourse(\n            this.state.unsaved_changes._id,\n            this.state.unsaved_changes)\n            .then(status => this.setEditing(false))\n    }\n\n    updateCourseTitle = (newTitle) =>\n        this.setState(prevState => ({\n            unsaved_changes: {\n                ...prevState.unsaved_changes,\n                title: newTitle\n            }\n        }))\n\n    render() {\n        return (\n            <div className=\"col mb-4\">\n                <div className=\"card\"\n                     onClick={() => this.props.selectCourse(this.state.course._id)}>\n                    <span className={this.props.selected ? 'card-selected' : ''}>\n                        {\n                            !this.state.editing && this.props.selected &&\n                            <span>\n                                <i className=\"fa fa-pencil fa-lg wbdv-row wbdv-icon wbdv-card-pencil float-right\"\n                                   onClick={() => this.setEditing(true)}/>\n                                <i className=\"fa fa-trash fa-lg wbdv-row wbdv-icon wbdv-card-trash float-right\"\n                                   onClick={() => this.props.deleteCourse(this.props.course)}/>\n                            </span>\n                        }\n                        <img className=\"card-img-top\" src={require('../preview-image.png')}\n                             alt=\"Card image cap\"/>\n                        <div className=\"row card-body wbdv-no-padding\">\n                            <div className=\"col-10 wbdv-card-text\">\n                                {\n                                    !this.state.editing &&\n                                    <p className={this.props.selected ?\n                                                  'text-truncate card-title wbdv-selected-white' :\n                                                  'text-truncate card-title wbdv-sharp-blue'}>\n                                        <Link to={`/editor/${this.state.course._id}`}>\n                                            <span className={this.props.selected ? 'wbdv-selected-white' : ''}>\n                                                {this.state.course.title}\n                                            </span>\n                                        </Link>\n                                    </p>\n                                }\n                                {\n                                    this.state.editing && this.props.selected &&\n                                    <input\n                                        className=\"form-control wbdv-card-input align-middle\"\n                                        onChange={(event) => this.updateCourseTitle(event.target.value)}\n                                        value={this.state.unsaved_changes.title}/>\n                                }\n                                <div className=\"align-middle\">\n                                    <span className={this.props.selected ? 'wbdv-selected-white' : 'wbdv-sharp-blue'}>\n                                        <i className=\"fa fa-file-text wbdv-row wbdv-icon align-middle wbdv-card-doc-icon\"></i>\n                                    </span>\n                                    <span className=\"wbdv-card-time align-bottom\">\n                                        <span className={this.props.selected ? 'wbdv-selected-white' : ''}>\n                                            {this.state.course.modified}\n                                        </span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"col-2 wbdv-no-padding wbdv-check\">\n                                {\n                                    this.state.editing &&\n                                    <i className=\"fa fa-check wbdv-row wbdv-icon align-top wbdv-selected-white\"\n                                       onClick={this.ok}/>\n                                }\n                            </div>\n                        </div>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport CourseCardComponent from \"./CourseCardComponent\";\n\nexport default class CourseGridComponent\n  extends React.Component\n{\n  render() {\n    return(\n        <div>\n          <table className=\"table\">\n            <thead>\n            <tr>\n              <th className=\"d-table-cell wbdv-large-cell wbdv-header-height align-middle wbdv-dark-gray wbdv-header wbdv-title\">\n                Recent Documents\n              </th>\n              <th className=\"d-none d-md-table-cell wbdv-medium-cell wbdv-header-height align-middle wbdv-dark-gray wbdv-header wbdv-owner\">\n                Owned by me\n                <i className=\"fa fa-caret-down wbdv-drop-down-arrow\"></i>\n              </th>\n              <th className=\"wbdv-medium-cell wbdv-header-height align-middle wbdv-dark-gray\"\n                  align=\"center\">\n                <div>\n                  <i className=\"fa fa-th-list wbdv-row-button-spacing\"\n                     onClick={() =>\n                         this.props.setLayout('table')}/>\n                  <a className=\"wbdv-header wbdv-sort\">\n                    <i className=\"fa fa-sort-alpha-asc wbdv-row-button-spacing\"></i>\n                  </a>\n                  <a className=\"wbdv-header wbdv-folder\">\n                    <i className=\"fa fa-folder wbdv-row-button-spacing\"></i>\n                  </a>\n                </div>\n              </th>\n            </tr>\n            </thead>\n          </table>\n          <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-6\">\n            {\n              this.props.courses.map(course =>\n                <CourseCardComponent\n                    deleteCourse={this.props.deleteCourse}\n                    selectCourse={this.props.selectCourse}\n                    key={course._id}\n                    course={course}\n                    selected={this.props.selected === course._id}/>\n              )}\n            </div>\n        </div>\n    )\n  }\n}\n","import React from \"react\";\nimport CourseTableComponent from \"../components/CourseTableComponent\";\nimport CourseGridComponent from \"../components/CourseGridComponent\";\nimport courseService from \"../services/CourseService\"\n\nclass CourseManagerContainer\n  extends React.Component\n{\n  state = {\n    layout: this.props.match.params.layout,\n    courses: [],\n    newCourseTitle: 'New Course',\n    selected: null\n  }\n\n  componentDidMount() {\n    courseService.findAllCourses()\n      .then(actualArrayOfCourses =>\n        this.setState({\n          courses: actualArrayOfCourses\n        }))\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(prevProps.match.params.layout !== this.props.match.params.layout) {\n        courseService.findAllCourses()\n          .then(actualArrayOfCourses =>\n            this.setState({\n              layout: this.props.match.params.layout,\n              courses: actualArrayOfCourses\n            }))\n    }\n  }\n\n  setLayout = (layout) => {\n    this.props.history.push(`/${layout}/courses`)\n  }\n\n\n  selectCourse  = (courseId) => {this.setState({\n    selected: courseId\n  })}\n\n  deleteCourse = (courseToDelete) =>\n    courseService.deleteCourse(courseToDelete._id)\n      .then(status => this.setState(prevState => ({\n        courses: prevState\n          .courses.filter(course => course !== courseToDelete)\n      })))\n\n  addCourse = (title) =>\n    courseService.createCourse({\n      title: title,\n      owner: 'me',\n      modified: (new Date()).toDateString()\n    })\n      .then(theActualNewCourse =>\n        this.setState((prevState) => {\n        return {\n          courses: [\n            ...prevState.courses,\n            theActualNewCourse\n          ]\n        }\n      }))\n\n\n  render() {\n    return(\n      <div>\n          <div className=\"container\">\n              <nav className=\"navbar fixed-top navbar-dark bg-primary\">\n                  <div className=\"form-inline row\">\n                      <div>\n                          <i className=\"fa fa-bars fa-lg wbdv-hamburger wbdv-hamburger\"></i>\n                      </div>\n                      <div\n                          className=\"d-none d-md-block wbdv-course-manager-style wbdv-label wbdv-course-manager\">\n                          Course Manager\n                      </div>\n                      <div className=\"search-area\">\n                          <input\n                              className=\"search-bar font-italic font-weight-bold wbdv-field wbdv-new-course\"\n                              type=\"text\"\n                              placeholder=\"New Course Title\"\n                              value={this.state.newCourseTitle}\n                              onChange={(event) => this.setState({\n                                  newCourseTitle: event.target.value\n                              })}\n                              title=\"Username\"/>\n                      </div>\n                      <div className=\"wbdv-add-button-area\">\n                          <button\n                              className=\"btn btn-danger wbdv-add-btn-top wbdv-button wbdv-add-course\"\n                              onClick={() => this.addCourse(this.state.newCourseTitle)}>\n                              <i className=\"fa fa-plus \"></i>\n                          </button>\n                      </div>\n                  </div>\n              </nav>\n\n              {\n                  this.state.layout === 'table' &&\n                  <div>\n                      <CourseTableComponent\n                          deleteCourse={this.deleteCourse}\n                          courses={this.state.courses}\n                          selectCourse={this.selectCourse}\n                          selected={this.state.selected}\n                          setLayout={this.setLayout}/>\n                  </div>\n              }\n              {\n                  this.state.layout === 'grid' &&\n                  <div>\n                      <CourseGridComponent\n                          deleteCourse={this.deleteCourse}\n                          courses={this.state.courses}\n                          selectCourse={this.selectCourse}\n                          selected={this.state.selected}\n                          setLayout={this.setLayout}/>\n                  </div>\n              }\n\n              <button className=\"wbdv-bottom-right-10px btn btn-danger\">\n                  <i className=\"fa fa-plus fa-lg\"></i>\n              </button>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default CourseManagerContainer\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass ModuleListComponent extends React.Component {\n    state = {\n        newModuleTitle: 'New Module',\n        editingModule: {},\n        selected: this.props.params.moduleId\n    }\n\n    componentDidMount() {\n        this.props.findModuleForCourse(this.props.params.courseId)\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-4 wbdv-no-padding\">\n                <div className=\"wbdv-module-list\">\n                    <ul className=\"list-group\">\n                        {\n                        this.props.modules.map(module =>\n                            <Link key={module._id}\n                                  to={`/editor/${this.props.params.courseId}/modules/${module._id}`}\n                                  className={`list-group-item align-middle wbdv-module-item ${this.state.selected === module._id ? \"active\" : \"\"}`}\n                                  onClick={() => {\n                                        this.setState({\n                                            selected: module._id\n                                        });\n                                    }}>\n                                {\n                                    this.state.editingModule._id === module._id &&\n                                    <input value={this.state.editingModule.title}\n                                           onclick=\"this.select()\"\n                                           onChange={(e) => {\n                                               const newTitle = e.target.value\n                                               this.setState(prevState => ({\n                                                   editingModule: {\n                                                       ...prevState.editingModule,\n                                                       title: newTitle\n                                                   }\n                                               }))\n                                           }}/>\n                                }\n                                {\n                                    this.state.editingModule._id !== module._id &&\n                                    <span className=\"wbdv-module-item-title\">\n                                        {module.title}\n                                    </span>\n                                }\n                                {\n                                    this.state.editingModule._id === module._id &&\n                                    <span>\n                                        <i className=\"btn fa fa-times float-right wbdv-module-button wbdv-module-item-delete-btn\"\n                                           onClick={() => this.props.deleteModule(module._id)}/>\n                                        <i className=\"btn fa fa-check float-right wbdv-module-button wbdv-module-item-save-btn\"\n                                        onClick={() => {\n                                        this.props.updateModule(this.state.editingModule._id, this.state.editingModule)\n                                        this.setState({editingModule: {}})}}/>\n                                    </span>\n                                }\n                                {\n                                    this.state.editingModule._id !== module._id && this.state.selected === module._id &&\n                                    <i className=\"btn fa fa-pencil float-right wbdv-module-button wbdv-module-item-edit-btn\"\n                                       onClick={() => this.setState({editingModule: module})}/>\n                                }\n                            </Link>\n                        )}\n                    </ul>\n                    <div className=\"align-middle\" align=\"right\">\n                        <i className=\"btn fa fa-plus fa-lg wbdv-bottom-plus wbdv-module-item-add-btn\"\n                           onClick={() => this.props.createModule(\n                               this.props.params.courseId,\n                               {\n                                   title: this.state.newModuleTitle\n                               })}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ModuleListComponent\n","const findAllModules = () => {\n  return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/modules\")\n    .then(response => response.json())\n}\n\nconst findModuleForCourse = (courseId) =>\n  fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/courses/${courseId}/modules`)\n    .then(response => response.json())\n\n\nconst deleteModule = (moduleId) => {\n  return fetch(\"https://wbdv-generic-server.herokuapp.com/api/001458299/modules/\" + moduleId, {\n    method: 'DELETE'\n  })\n    .then(response => response.json())\n}\n\nconst updateModule = (moduleId, newModule) =>\n  fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/modules/${moduleId}`, {\n    method: 'PUT',\n    body: JSON.stringify(newModule),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\nconst createModule = (courseId, module) =>\n  fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/courses/${courseId}/modules`, {\n    method: 'POST',\n    body: JSON.stringify(module),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\n\nexport default {\n  findAllModules,\n  deleteModule,\n  createModule,\n  updateModule,\n  findModuleForCourse\n}\n","import {connect} from \"react-redux\";\nimport ModuleListComponent from \"../components/ModuleListComponent\";\nimport ModuleService from \"../services/ModuleService\";\n\nconst stateToPropertyMapper = (state, ownProps) => {\n  return {\n    modules: state.moduleReducer.modules,\n    newModuleTitle: state.moduleReducer.newModuleTitle,\n    params: ownProps.params\n  }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n  return {\n    findModuleForCourse: (courseId) => {\n      ModuleService.findModuleForCourse(courseId)\n        .then(modulesForTheCourse => dispatch({\n          type: 'FIND_MODULES_FOR_COURSE',\n          modules: modulesForTheCourse\n        }))\n    },\n    updateModule: (moduleId, newModuleData) => {\n      ModuleService.updateModule(moduleId, newModuleData)\n        .then(status => dispatch({\n          type: 'UPDATE_MODULE',\n          updatedModule: newModuleData\n        }))\n    },\n    createModule: (courseId, newModule) => {\n      ModuleService.createModule(courseId, newModule)\n        .then(actualNewModule => dispatch({\n          type: \"CREATE_MODULE\",\n          newModule: actualNewModule\n        }))\n    },\n    deleteModule  : (moduleId) => {\n      ModuleService.deleteModule(moduleId)\n        .then(status => dispatch({\n          type: \"DELETE_MODULE\",\n          moduleId: moduleId\n        }))\n    }\n  }\n}\n\nconst ModuleListContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(ModuleListComponent)\n\nexport default ModuleListContainer\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nclass LessonTabsComponent extends React.Component {\n    state = {\n        newLessonTitle: 'New Lesson',\n        editingLesson: {},\n        selected: this.props.params.lessonId\n    }\n\n    componentDidMount() {\n        this.props.findLessonsForModule(this.props.params.moduleId)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.params.moduleId !== this.props.params.moduleId) {\n            this.props.findLessonsForModule(this.props.params.moduleId)\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <ul className=\"nav nav-pills nav-fill wbdv-lesson-tabs float-right\">\n                     {\n                         this.props.lessons.map(lesson =>\n                              <Link className={`nav-item nav-link ${this.state.selected === lesson._id ? \"active\" : \"\"}`}\n                                    to={`/editor/${this.props.params.courseId}/modules/${this.props.params.moduleId}/lessons/${lesson._id}`}\n                                    onClick={() => {\n                                          this.setState({\n                                                selected: lesson._id\n                                          });\n                                    }}>\n                                      {\n                                              this.state.editingLesson._id === lesson._id &&\n                                              <input\n                                                  value={this.state.editingLesson.title}\n                                                  onChange={(e) => {\n                                                          const newTitle = e.target.value\n                                                          this.setState(\n                                                              prevState => ({\n                                                                      editingLesson: {\n                                                                              ...prevState.editingLesson,\n                                                                              title: newTitle\n\n                                                                      }\n                                                              }))\n                                                  }}/>\n                                      }\n                                      {\n                                              this.state.editingLesson._id !== lesson._id &&\n                                              <span className=\"wbdv-module-item-title\">\n                                                        {lesson.title}\n                                              </span>\n                                      }\n                                      {\n                                              this.state.editingLesson._id === lesson._id &&\n                                              <span>\n                                                <i className=\"btn fa fa-times float-right wbdv-lesson-button\"\n                                                onClick={() => this.props.deleteLesson(lesson._id)}/>\n                                                <i className=\"btn fa fa-check float-right wbdv-lesson-button\"\n                                                onClick={() => {\n                                                   this.props.updateLesson(this.state.editingLesson._id, this.state.editingLesson)\n                                                   this.setState({editingLesson: {}})}}/>\n                                              </span>\n                                      }\n                                      {\n                                              this.state.editingLesson._id !== lesson._id && this.state.selected === lesson._id &&\n                                              <i className=\"btn fa fa-pencil float-right wbdv-lesson-button\"\n                                                 onClick={() => this.setState({editingLesson: lesson})}/>\n                                      }\n                              </Link>)\n                     }\n                     {\n                             this.props.params.moduleId &&\n                             <il className=\"wbdv-no-padding\">\n                                     <i className=\"btn fa fa-plus fa-lg wbdv-top-plus wbdv-lesson-add-btn float-right\"\n                                        onClick={() => this.props.createLesson(\n                                            this.props.params.moduleId,\n                                            {\n                                                    title: this.state.newLessonTitle\n                                            })}/>\n                             </il>\n                     }\n                </ul>\n            </span>\n        )\n    }\n}\n\nexport default LessonTabsComponent\n","const findLessonsForModule = (moduleId) =>\n  fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/modules/${moduleId}/lessons`)\n    .then(response => response.json())\n\nconst deleteLesson = (lessonId) => {\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/lessons/${lessonId}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n}\n\nconst updateLesson = (lessonId, lesson) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/lessons/${lessonId}`, {\n        method: 'PUT',\n        body: JSON.stringify(lesson),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst createLesson = (moduleId, newLesson) =>\n  fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/modules/${moduleId}/lessons`, {\n    method: 'POST',\n    body: JSON.stringify(newLesson),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n\nexport default {\n    findLessonsForModule,\n    deleteLesson,\n    updateLesson,\n    createLesson\n}\n","import {connect} from \"react-redux\";\nimport LessonTabsComponent from \"../components/LessonTabsComponent\";\nimport LessonService from \"../services/LessonService\";\n\nconst stateToPropertyMapper = (state, ownProps) => {\n    return {\n        lessons: state.lessonReducer.lessons,\n        newLessonTitle: state.lessonReducer.newLessonTitle,\n        params: ownProps.params\n    }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        findLessonsForModule: (moduleId) => {\n            LessonService.findLessonsForModule(moduleId)\n                .then(lessonsForTheModule => dispatch({\n                                                          type: 'FIND_LESSONS_FOR_MODULE',\n                                                          lessons: lessonsForTheModule\n                                                      }))\n        },\n        updateLesson: (lessonId, newLessonData) => {\n            LessonService.updateLesson(lessonId, newLessonData)\n                .then(status => dispatch({\n                                             type: 'UPDATE_LESSON',\n                                             updatedLesson: newLessonData\n                                         }))\n        },\n        createLesson: (moduleId, newLesson) => {\n            LessonService.createLesson(moduleId, newLesson)\n                .then(actualNewLesson => dispatch({\n                                                      type: \"CREATE_LESSON\",\n                                                      newLesson: actualNewLesson\n                                                  }))\n        },\n        deleteLesson: (lessonId) => {\n            LessonService.deleteLesson(lessonId)\n                .then(status => dispatch({\n                                             type: \"DELETE_LESSON\",\n                                             lessonId: lessonId\n                                         }))\n        }\n    }\n}\n\nconst LessonTabsContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(LessonTabsComponent)\n\nexport default LessonTabsContainer","import React from \"react\";\n\nclass TopicPillsComponent extends React.Component {\n    state = {\n        newTopicTitle: 'New Topic',\n        editingTopic: {},\n        selected: {}\n    }\n\n    componentDidMount() {\n        this.props.findTopicsForLesson(this.props.params.lessonId)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.params.moduleId !== this.props.params.moduleId ||\n            prevProps.params.lessonId !== this.props.params.lessonId) {\n            this.props.findTopicsForLesson(this.props.params.lessonId)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wbdv-topics\">\n                <ul className=\"nav nav-pills nav-fill wbdv-topic-pill-list\">\n                    {\n                        this.props.topics.map(topic =>\n                             <il className={`nav-item topic-link wbdv-topic-pill ${this.state.selected === topic._id ? \"active\" : \"\"}`}\n                                 onClick={() => {\n                                     this.setState({\n                                          selected: topic._id\n                                     });\n                                 }}>\n                                 {\n                                     this.state.editingTopic._id === topic._id &&\n                                     <input value={this.state.editingTopic.title}\n                                            onclick=\"this.select()\"\n                                            onChange={(e) => {\n                                                const newTitle = e.target.value\n                                                this.setState(prevState => ({\n                                                    editingTopic: {\n                                                        ...prevState.editingTopic,\n                                                        title: newTitle\n                                                    }\n                                                }))\n                                            }}/>\n                                 }\n                                 {\n                                     this.state.editingTopic._id !== topic._id &&\n                                     topic.title\n                                 }\n                                 {\n                                     this.state.editingTopic._id === topic._id &&\n                                     <span>\n                                         <i className=\"btn fa fa-times float-right wbdv-topic-button\"\n                                            onClick={() => this.props.deleteTopic(topic._id)}/>\n                                         <i className=\"btn fa fa-check float-right wbdv-topic-button\"\n                                            onClick={() => {\n                                               this.props.updateTopic(this.state.editingTopic._id, this.state.editingTopic)\n                                               this.setState({editingTopic: {}})}}/>\n                                    </span>\n                                 }\n                                 {\n                                     this.state.editingTopic._id !== topic._id && this.state.selected === topic._id &&\n                                     <i className=\"btn fa fa-pencil float-right wbdv-topic-button\"\n                                        onClick={() => this.setState({editingTopic: topic})}/>\n                                 }\n                             </il>)\n                    }\n                    {\n                        this.props.params.lessonId &&\n                        <il className=\"btn wbdv-topic-plus align-middle\" align=\"center\">\n                            <i className=\"fa fa-plus fa-sm wbdv-topic-add-btn\"\n                               onClick={() => this.props.createTopic(\n                                   this.props.params.lessonId,\n                                   {\n                                       title: this.state.newTopicTitle\n                                   })}/>\n                        </il>\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default TopicPillsComponent","const findTopicsForLesson = (lessonId) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/lessons/${lessonId}/topics`)\n        .then(response => response.json())\n\nconst deleteTopic = (topicId) => {\n    return fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/topics/${topicId}`, {\n        method: 'DELETE'\n    })\n        .then(response => response.json())\n}\n\nconst updateTopic = (topicId, topic) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/topics/${topicId}`, {\n        method: 'PUT',\n        body: JSON.stringify(topic),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nconst createTopic = (lessonId, newTopic) =>\n    fetch(`https://wbdv-generic-server.herokuapp.com/api/001458299/lessons/${lessonId}/topics`, {\n        method: 'POST',\n        body: JSON.stringify(newTopic),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n\nexport default {\n    findTopicsForLesson,\n    deleteTopic,\n    updateTopic,\n    createTopic\n}\n","import {connect} from \"react-redux\";\nimport TopicPillsComponent from \"../components/TopicPillsComponent\";\nimport TopicService from \"../services/TopicService\";\n\nconst stateToPropertyMapper = (state, ownProps) => {\n    return {\n        topics: state.topicReducer.topics,\n        newTopicTitle: state.topicReducer.newTopicTitle,\n        params: ownProps.params\n    }\n}\n\nconst dispatchToPropertyMapper = (dispatch) => {\n    return {\n        findTopicsForLesson: (lessonId) => {\n            TopicService.findTopicsForLesson(lessonId)\n                .then(topicsForTheLesson => dispatch({\n                                                          type: 'FIND_TOPICS_FOR_LESSON',\n                                                          topics: topicsForTheLesson\n                                                      }))\n        },\n        updateTopic: (topicId, newTopicData) => {\n            TopicService.updateTopic(topicId, newTopicData)\n                .then(status => dispatch({\n                                             type: 'UPDATE_TOPIC',\n                                             updatedTopic: newTopicData\n                                         }))\n        },\n        createTopic: (lessonId, newTopic) => {\n            TopicService.createTopic(lessonId, newTopic)\n                .then(actualNewTopic => dispatch({\n                                                      type: \"CREATE_TOPIC\",\n                                                      newTopic: actualNewTopic\n                                                  }))\n        },\n        deleteTopic: (topicId) => {\n            TopicService.deleteTopic(topicId)\n                .then(status => dispatch({\n                                             type: \"DELETE_TOPIC\",\n                                             topicId: topicId\n                                         }))\n        }\n    }\n}\n\nconst TopicPillsContainer = connect\n(stateToPropertyMapper, dispatchToPropertyMapper)\n(TopicPillsComponent)\n\nexport default TopicPillsContainer","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ModuleListContainer from \"./ModuleListContainer\";\nimport LessonTabsContainer from \"./LessonTabsContainer\";\nimport TopicPillsContainer from \"./TopicPillsContainer\";\nimport courseService from \"../services/CourseService\";\n\nclass CourseEditorContainer extends React.Component {\n    state = {\n        courseName: \"\"\n    }\n\n    componentDidMount() {\n        courseService.findCourseById(this.props.match.params.courseId)\n            .then(course =>\n                 this.setState({\n                      courseName: course.title\n                 }))\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"wbdv-module-top font-weight-bold\">\n                    <div className=\"row wbdv-no-padding\">\n                        <div className=\"col-2 col-md-1 wbdv-no-padding\">\n                            <Link className=\"wbdv-course-editor wbdv-close align-middle\"\n                                  to={`/table/courses`}>\n                                <i className=\"fa fa-times fa-lg wbdv-module-top-x\"></i>\n                            </Link>\n                        </div>\n                        <div\n                            className=\"col-10 col-md-2 text-truncate wbdv-course-title wbdv-course-title wbdv-no-padding align-middle\"\n                            title={this.state.courseName}>\n                            {this.state.courseName}\n                        </div>\n                        <div className=\"col-12 col-md-9 wbdv-no-padding wbdv-lesson-top\">\n                            {\n                                <LessonTabsContainer {...this.props.match}/>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row wbdv-no-margin\">\n                    {\n                        <ModuleListContainer {...this.props.match}/>\n                    }\n                    <div className=\"col-md-8 wbdv-no-padding\">\n                        {\n                            <TopicPillsContainer {...this.props.match}/>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CourseEditorContainer\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst HomeComponent = () =>\n  <div className=\"container\">\n    <h2 className=\"wbdv-home-title\">Home</h2>\n    <div>\n      <div>\n        <Link className=\"wbdv-home-links\" to='/editor'>\n          Course Editor\n        </Link>\n      </div>\n      <div>\n        <Link className=\"wbdv-home-links\" to='/table/courses'>\n          Course List\n        </Link>\n      </div>\n      <div>\n        <Link className=\"wbdv-home-links\" to='/login'>\n          Login\n        </Link>\n      </div>\n      <div>\n        <Link className=\"wbdv-home-links\" to='/register'>\n          Registration\n        </Link>\n      </div>\n      <div>\n        <Link className=\"wbdv-home-links\" to='/profile'>\n          Profile\n        </Link>\n      </div>\n    </div>\n  </div>\n\nexport default HomeComponent\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginComponent = () =>\n    <div className=\"container\">\n        <div>\n            <h1>Sign In</h1>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">Username</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"username\"\n                           className=\"form-control wbdv-field wbdv-username\"\n                           type=\"text\"\n                           placeholder=\"Alice\"\n                           title=\"Use this username to login\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">Password</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"password\"\n                           className=\"form-control wbdv-field wbdv-password\"\n                           type=\"text\"\n                           placeholder=\"123qwe#$%\"\n                           title=\"Use this password to login\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label className=\"col-sm-2 col-form-label\"></label>\n                <div className=\"col-sm-10\">\n                    <Link role=\"button\"\n                       className=\"btn btn-primary btn-block wbdv-button wbdv-login\"\n                       to=\"/profile\">Sign in</Link>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <Link className=\"wbdv-link wbdv-cancel\"\n                               to=\"/\">Cancel</Link>\n                        </div>\n                        <div className=\"col-6\">\n                            <Link className=\"float-right wbdv-link wbdv-register\"\n                               to=\"/register\">Sign up</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\nexport default LoginComponent\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst RegistrationComponent = () =>\n    <div className=\"container\">\n        <div>\n            <h1>Sign Up</h1>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"usernameFld\" className=\"col-sm-2 col-form-label\">Username</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"usernameFld\"\n                           className=\"form-control wbdv-field wbdv-username\"\n                           type=\"text\"\n                           placeholder=\"Alice\"\n                           title=\"Use this username to login\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"passwordFld\" className=\"col-sm-2 col-form-label\">Password</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"passwordFld\"\n                           className=\"form-control wbdv-field wbdv-password\"\n                           type=\"text\"\n                           placeholder=\"123qwe#$%\"\n                           title=\"Use this password to login\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"verifyPasswordFld\" className=\"col-sm-2 col-form-label\">Verify\n                    Password</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"verifyPasswordFld\"\n                           className=\"form-control wbdv-field wbdv-password-verify\"\n                           type=\"text\"\n                           placeholder=\"123qwe#$%\"\n                           title=\"Use this to verify password\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label className=\"col-sm-2 col-form-label\"></label>\n                <div className=\"col-sm-10\">\n                    <Link role=\"button\"\n                       className=\"btn btn-primary btn-block wbdv-button wbdv-register\"\n                       to=\"/profile\">Sign up</Link>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <Link className=\"wbdv-link wbdv-cancel\"\n                               to=\"/\">Cancel</Link>\n                        </div>\n                        <div className=\"col-6\">\n                            <Link className=\"float-right wbdv-link wbdv-login\"\n                               to=\"/login\">Login</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\nexport default RegistrationComponent","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst ProfileComponent = () =>\n    <div className=\"container\">\n        <div>\n            <h1>Profile</h1>\n\n            <div id=\"alertFld\"\n                 className=\"alert alert-success wbdv-message\"\n                 role=\"alert\">\n                Profile Successfully saved\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"usernameFld\" className=\"col-sm-2 col-form-label\">Username</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"usernameFld\"\n                           className=\"form-control wbdv-field wbdv-username\"\n                           type=\"text\"\n                           placeholder=\"Alice\"\n                           title=\"Username\"\n                           readOnly/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"phoneFld\" className=\"col-sm-2 col-form-label\">Phone</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"phoneFld\"\n                           className=\"form-control wbdv-field wbdv-phone\"\n                           type=\"tel\"\n                           placeholder=\"(555) 123-4324\"\n                           title=\"Phone Number\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"emailFld\" className=\"col-sm-2 col-form-label\">Email</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"emailFld\"\n                           className=\"form-control wbdv-field wbdv-email\"\n                           type=\"email\"\n                           placeholder=\"alice@wonderland.com\"\n                           title=\"Email Address\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"roleFld\" className=\"col-sm-2 col-form-label\">Role</label>\n                <div className=\"col-sm-10\">\n                    <select id=\"roleFld\" className=\"form-control wbdv-field wbdv-role\" disabled>\n                        <option selectedvalue=\"FACULTY\">Faculty</option>\n                        <option value=\"STUDENT\">Student</option>\n                        <option value=\"ADMIN\">Admin</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label htmlFor=\"dateofbirthFld\" className=\"col-sm-2 col-form-label\">Date of\n                    Birth</label>\n                <div className=\"col-sm-10\">\n                    <input id=\"dateofbirthFld\"\n                           className=\"form-control wbdv-field wbdv-dob\"\n                           type=\"date\"\n                           placeholder=\"mm/dd/yyyy\"\n                           title=\"Date of Birth\"/>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label className=\"col-sm-2 col-form-label\"></label>\n                <div className=\"col-sm-10\">\n                    <button id=\"updateBtn\"\n                            className=\"btn btn-success btn-block wbdv-button wbdv-update\">\n                        Update\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"form-group-reg row\">\n                <label className=\"col-sm-2 col-form-label\"></label>\n                <div className=\"col-sm-10\">\n                    <Link role=\"button\"\n                       id=\"logoutBtn\"\n                       className=\"btn btn-danger btn-block wbdv-button wbdv-logout\"\n                       to=\"/\">Logout</Link>\n                </div>\n            </div>\n        </div>\n    </div>\n\nexport default ProfileComponent","import React from 'react'\nimport CourseManagerContainer from \"../containers/CourseManagerContainer\";\nimport CourseEditorContainer from \"../containers/CourseEditorContainer\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport HomeComponent from \"./HomeComponent\";\nimport LoginComponent from \"./LoginComponent\";\nimport RegistrationComponent from \"./RegistrationComponent\";\nimport ProfileComponent from \"./ProfileComponent\";\n\nclass WhiteBoard extends React.Component {\n  render() {\n    return(\n      <BrowserRouter>\n        <div>\n          <Route path=\"/login\" exact={true} component={LoginComponent}/>\n          <Route path=\"/register\" exact={true} component={RegistrationComponent}/>\n          <Route path=\"/profile\" exact={true} component={ProfileComponent}/>\n\n          <Route\n            path='/'\n            exact={true}\n            component={HomeComponent}\n          />\n\n          <Route\n            path='/courses'\n            exact={true}\n            component={CourseManagerContainer}/>\n\n          <Route\n            path='/:layout/courses'\n            exact={true}\n            component={CourseManagerContainer}/>\n\n          <Route\n              path={['/editor', '/editor/:courseId', '/editor/:courseId/modules/:moduleId', '/editor/:courseId/modules/:moduleId/lessons/:lessonId']}\n            exact={true}\n            component={CourseEditorContainer}/>\n\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default WhiteBoard\n","import React from 'react';\nimport './App.css';\nimport WhiteBoard from './components/WhiteBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WhiteBoard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nconst initialState = {\n  newModuleTitle: 'New Module',\n  modules: []\n}\n\nconst moduleReducer = (state=initialState, event) => {\n  switch (event.type) {\n    case \"UPDATE_MODULE\":\n      return {\n        ...state,\n        modules: state.modules.map(\n          module => module._id === event.updatedModule._id ?\n            event.updatedModule : module )\n      }\n    case \"FIND_MODULES_FOR_COURSE\":\n      return {\n        ...state,\n        modules: event.modules\n      }\n    case \"CREATE_MODULE\":\n      return {\n        modules: [\n          ...state.modules,\n          event.newModule\n        ]\n      }\n      break\n    case \"DELETE_MODULE\":\n      return {\n        modules: state.modules.filter(module => module._id !== event.moduleId)\n      }\n      break\n    default:\n      return state\n  }\n}\n\nexport default moduleReducer\n","\nconst initialState = {\n  newLessonTitle: 'New Lesson',\n  lessons: []\n}\n\nconst lessonReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case \"DELETE_LESSON\":\n      return {\n        ...state,\n        lessons: state.lessons.filter(lesson => lesson._id !== action.lessonId)\n      }\n    case \"UPDATE_LESSON\":\n      return {\n        ...state,\n        lessons: state.lessons.map(\n            lesson => lesson._id === action.updatedLesson._id ?\n                      action.updatedLesson : lesson )\n      }\n    case \"FIND_LESSONS_FOR_MODULE\":\n      return {\n        ...state,\n        lessons: action.lessons\n      }\n    case \"CREATE_LESSON\":\n      return {\n        ...state,\n        lessons: [...state.lessons, action.newLesson]\n      }\n    default:\n      return state\n  }\n}\n\nexport default lessonReducer\n","\nconst initialState = {\n    newTopicTitle: 'New Topic',\n    topics: []\n}\n\nconst topicReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case \"DELETE_TOPIC\":\n            return {\n                ...state,\n                topics: state.topics.filter(topic => topic._id !== action.topicId)\n            }\n        case \"UPDATE_TOPIC\":\n            return {\n                ...state,\n                topics: state.topics.map(\n                    topic => topic._id === action.updatedTopic._id ?\n                              action.updatedTopic : topic )\n            }\n        case \"FIND_TOPICS_FOR_LESSON\":\n            return {\n                ...state,\n                topics: action.topics\n            }\n        case \"CREATE_TOPIC\":\n            return {\n                ...state,\n                topics: [...state.topics, action.newTopic]\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport moduleReducer from \"./reducers/moduleReducer\";\nimport lessonReducer from \"./reducers/lessonReducer\";\nimport topicReducer from \"./reducers/topicReducer\";\n\nconst reducers = combineReducers({\n    moduleReducer, lessonReducer, topicReducer\n})\nconst store = createStore(reducers)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}